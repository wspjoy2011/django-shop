# Generated by Django 5.2.5 on 2025-08-24 19:00

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0014_remove_product_idx_article_year_upd_cre_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(help_text='ISO 4217 currency code (e.g., USD, EUR, JPY)', max_length=3, primary_key=True, serialize=False)),
                ('numeric_code', models.SmallIntegerField(blank=True, help_text='ISO 4217 numeric code', null=True, unique=True)),
                ('name', models.CharField(help_text='Full currency name (e.g., US Dollar)', max_length=100)),
                ('symbol', models.CharField(blank=True, help_text='Currency symbol (e.g., $, €, ¥)', max_length=10)),
                ('decimals', models.SmallIntegerField(default=2, help_text='Number of decimal places for this currency', validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this currency is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'ordering': ['code'],
                'indexes': [models.Index(fields=['is_active'], name='idx_currency_active')],
            },
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price of the product', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale price (if on sale)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Total stock quantity')),
                ('reserved_quantity', models.PositiveIntegerField(default=0, help_text='Reserved/allocated quantity')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this product is active for sale')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(default='USD', help_text='Currency for pricing', on_delete=django.db.models.deletion.RESTRICT, to='inventories.currency')),
                ('product', models.OneToOneField(help_text='Product this inventory record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='catalog.product')),
            ],
            options={
                'verbose_name': 'Product Inventory',
                'verbose_name_plural': 'Product Inventories',
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['is_active'], name='idx_inventory_active'), models.Index(fields=['stock_quantity'], name='idx_inventory_stock'), models.Index(fields=['-updated_at'], name='idx_inventory_updated')],
                'constraints': [models.CheckConstraint(condition=models.Q(('base_price__gte', 0)), name='inventory_base_price_non_negative'), models.CheckConstraint(condition=models.Q(('sale_price__isnull', True), ('sale_price__gte', 0), _connector='OR'), name='inventory_sale_price_non_negative'), models.CheckConstraint(condition=models.Q(('reserved_quantity__lte', models.F('stock_quantity'))), name='inventory_reserved_lte_stock')],
            },
        ),
    ]
