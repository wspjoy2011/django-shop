# Generated by Django 5.2.5 on 2025-08-27 16:07

import django.db.models.deletion
import django_extensions.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0015_alter_product_disliked_by_alter_product_liked_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FavoriteCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='My favorites', help_text='Name of the collection', max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['user__username', 'name'])),
                ('description', models.TextField(blank=True, help_text='Optional description of the collection')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default collection for the user')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this collection is visible to other users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['is_default', '-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=1, help_text='Position of item in the collection')),
                ('note', models.TextField(blank=True, help_text='Optional note about this favorite item')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_items', to='favorites.favoritecollection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_items', to='catalog.product')),
            ],
            options={
                'ordering': ['position', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='favoritecollection',
            name='products',
            field=models.ManyToManyField(blank=True, help_text='Products in this collection', related_name='favorite_collections', through='favorites.FavoriteItem', to='catalog.product'),
        ),
        migrations.AddIndex(
            model_name='favoriteitem',
            index=models.Index(fields=['collection', 'position'], name='idx_fav_item_coll_pos'),
        ),
        migrations.AddIndex(
            model_name='favoriteitem',
            index=models.Index(fields=['product', '-created_at'], name='idx_fav_item_prod_created'),
        ),
        migrations.AddIndex(
            model_name='favoriteitem',
            index=models.Index(fields=['collection', '-created_at'], name='idx_fav_item_coll_created'),
        ),
        migrations.AlterUniqueTogether(
            name='favoriteitem',
            unique_together={('collection', 'product')},
        ),
        migrations.AddIndex(
            model_name='favoritecollection',
            index=models.Index(fields=['user', 'is_default'], name='idx_fav_coll_user_default'),
        ),
        migrations.AddIndex(
            model_name='favoritecollection',
            index=models.Index(fields=['user', '-updated_at'], name='idx_fav_coll_user_updated'),
        ),
        migrations.AddIndex(
            model_name='favoritecollection',
            index=models.Index(fields=['is_public', '-updated_at'], name='idx_fav_coll_public'),
        ),
        migrations.AddIndex(
            model_name='favoritecollection',
            index=models.Index(fields=['user', 'slug'], name='idx_fav_coll_user_slug'),
        ),
        migrations.AddConstraint(
            model_name='favoritecollection',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('user',), name='unique_default_collection_per_user'),
        ),
        migrations.AlterUniqueTogether(
            name='favoritecollection',
            unique_together={('user', 'name')},
        ),
    ]
